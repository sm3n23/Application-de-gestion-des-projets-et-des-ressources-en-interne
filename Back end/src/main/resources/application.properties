server.port=8085
# DataSource configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/gestionprojet
spring.datasource.username=postgres
spring.datasource.password=1234

# JPA/Hibernate properties
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# PostgreSQL driver
spring.datasource.driver-class-name=org.postgresql.Driver

# Other configurations
spring.main.allow-bean-definition-overriding=true
allowed.origins=http://localhost:3000

keycloak.realm=gestionprojet
keycloak.auth-server-url=http://localhost:8080/
keycloak.ssl-required=external
keycloak.resource=client-app
keycloak.credentials.secret=WlBT43pb2Sif6ptpBNDedjFp1ILspYpA
keycloak.public-client=true
keycloak.use-resource-role-mappings=true
keycloak.bearer-only=true
keycloak.principal-attribute=preferred_username


#spring.security.oauth2.client.registration.keycloak.client-name=keycloak
#spring.security.oauth2.client.registration.keycloak.client-id=projects-ressources-client
#spring.security.oauth2.client.registration.keycloak.client-secret=xDsCIfwuu1hJhjbbMngJgO6zCX1gkyEe
#spring.security.oauth2.client.registration.keycloak.scope=openid,profile,email,offline_access
#spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
#spring.security.oauth2.client.registration.keycloak.redirect-uri=http://localhost:8085/login/oauth2/code/keycloak
#spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:8080/realms/projects-ressources-realm
#spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/projects-ressources-realm
#spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8080/realms/projects-ressources-realm/protocol/openid-connect/certs
#spring.security.oauth2.client.provider.keycloak.user-name-attribute=preferred_username





